services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./app:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    env_file:
      - app/.env

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    env_file:
      - app/.env
    ports:
      - "5444:5432"  # Host:Container (connect using 5444 from host)
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      retries: 5
      timeout: 3s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: bitnami/redis:7.0
    environment:
      - ALLOW_EMPTY_PASSWORD=yes  # For development only
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_config worker --loglevel=info
    volumes:
      - ./app:/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    env_file:
      - app/.env

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
